caracteristicas generales{
  - almacenan información en nodos, los cuales serán páginas y
    se puede tener más de una clave.
    - Caracteristicas de hojas{
      1. se guarde el x numero de claves almacenadas.
      2. claves ordenadas de manera ascendente.
      3. campo para verificar si es un nodo hoja o no.
      4. cada nodo interno contiene x + 1 apuntadores a sus hijos. Los nodos
         hoja no tienen hijos.
      5. hay un rango de padres.
      6. Todas las hojas tienen la misma profundidad. (altura del arbol es la
         misma siempre).
      ***chan chan chan:
        - Hay un número max y min de claves que se pueden almacenar en cada
          página. Estos limites se llaman grado (d).
          ------ nosotros nos basamos en "cormel"...------
          - para cormel: d >= 2{
            - para cada nodo distinto de la raíz, minimo es d-1
            - max 2d -1
            ARBOL MÁS PEQUEÑO QUE TODOS: se conoce como 2-3-4
          }
        - para kairo: d >= 1{
          - min d.
          - max 2d
        }
    }
}

insercion{
  - se inserta de abajo hacía arriba (solo en los nodos hoja).
  - antes de insertar se parte el array de claves en la mitdad, (izq, centro,
    der), se sube el centro y las dos mitades forman dos hojas distintas.
  - hay que estár pendiente del máximo de claves
}


borrar{
  - se puede borrar una hoja o un nodo interno.
  - hay que estár pendiente del mínimo de claves
  - casos{
    //para hojas
    - 1: Borrado de clave de nodo hoja con más del mínimo de claves: No pasa nada.
      - 2: borrar una clave de un nodo hoja con justo el mínimo{
        - si el hermano izq o der tienen más del mínimo{
          - se hace una rotación respecto a la clave más "próxima" del hermano
            con más del mínimo, subiendo esa clave nueva y la clave que estaba
            ("padre") en esa posición se baja al espacio que quedó "vació".
        }
        - 2.2: clave a borrar con justo el min, igual los hermanos{
          - se busca el padre de la derecha de la clave a quitar (x) y se pone
            en ese espacio y se une conn el hermano de la izquierda (o cual sea
            el caso). //tener en cuenta que se puede generar un problema
            arriba y toca hacer rotación hacía donde corresponda.
        }
        . 3: borrar nodo interno{
          se busca reemplazo y se verifica que no haya complicaciones:
          si complicaciones => hacer casos 1 o 2 ...
        }

      }
  }
}



